# Make sure clang/opt are using the right flags for running passes based on the llvm version
if("${LLVM_VERSION_MAJOR}" VERSION_GREATER_EQUAL "12")
  set(OPT_USE_LEGACY_PM "-enable-new-pm=0")
  set(CLANG_USE_LEGACY_PM "-flegacy-pass-manager")
endif()

get_target_property(CLIENT_LIBRARIES client_lib LINK_LIBRARIES)
# Also add the client lib containing main
list(INSERT CLIENT_LIBRARIES 0 client_lib)

foreach(CLIENT_LIBRARY ${CLIENT_LIBRARIES})
    list(APPEND CLIENT_LIBRARIES_GENEXPRS_FILES \"../lib/$<TARGET_FILE_NAME:${CLIENT_LIBRARY}>\")
endforeach()

foreach(BOOST_LIBRARY ${BOOST_LIST_OF_LIBRARIES_TO_LINK_WITH})
    if(EXISTS BOOST_LIBRARY)
        list(APPEND BOOST_LIBRARIES_GENEXPRS_FILES "$<TARGET_PROPERTY:${BOOST_LIBRARY},LOCATION>")
    endif()
endforeach()

list(JOIN CLIENT_LIBRARIES_GENEXPRS_FILES "," CLIENT_LIBRARIES_FILES_LIST)
set(CLIENT_LIBRARIES_FILES_LIST "[${CLIENT_LIBRARIES_FILES_LIST}]")
list(JOIN BOOST_LIBRARIES_GENEXPRS_FILES " " BOOST_LIBRARIES_FILES)

set(CLIENT_NEEDED_COMPILATION_FLAGS
    ${CMAKE_THREAD_LIBS_INIT}
    )

list(JOIN CLIENT_NEEDED_COMPILATION_FLAGS " " CLIENT_NEEDED_COMPILATION_FLAGS)

set(SERVER_FILE "../tools/$<TARGET_FILE_NAME:server>")

set(FIZZER_PASS_FILE "../lib/$<TARGET_FILE_NAME:sbt-fizzer_pass>")


set(FIZZER_TARGET_NAME sbt-fizzer)
set(FIZZER_BUILD_CLIENT_TARGET_NAME sbt-fizzer_build_client)
set(FIZZER_INSTRUMENT_TARGET_NAME sbt-fizzer_instrument)

configure_file(${FIZZER_TARGET_NAME}.py ${FIZZER_TARGET_NAME}.py @ONLY)
file(
    GENERATE
    OUTPUT "$<CONFIG>/${FIZZER_TARGET_NAME}"
    INPUT ${CMAKE_CURRENT_BINARY_DIR}/${FIZZER_TARGET_NAME}.py
    )

install(PROGRAMS "${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/${FIZZER_TARGET_NAME}" DESTINATION "tools")

configure_file(${FIZZER_BUILD_CLIENT_TARGET_NAME}.py ${FIZZER_BUILD_CLIENT_TARGET_NAME}.py @ONLY)
file(
    GENERATE
    OUTPUT "$<CONFIG>/${FIZZER_BUILD_CLIENT_TARGET_NAME}"
    INPUT ${CMAKE_CURRENT_BINARY_DIR}/${FIZZER_BUILD_CLIENT_TARGET_NAME}.py
    )

install(PROGRAMS "${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/${FIZZER_BUILD_CLIENT_TARGET_NAME}" DESTINATION "tools")

configure_file(${FIZZER_INSTRUMENT_TARGET_NAME}.py ${FIZZER_INSTRUMENT_TARGET_NAME}.py @ONLY)
file(
    GENERATE
    OUTPUT "$<CONFIG>/${FIZZER_INSTRUMENT_TARGET_NAME}"
    INPUT ${CMAKE_CURRENT_BINARY_DIR}/${FIZZER_INSTRUMENT_TARGET_NAME}.py
    )

install(PROGRAMS "${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/${FIZZER_INSTRUMENT_TARGET_NAME}" DESTINATION "tools")