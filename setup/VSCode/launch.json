{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "run runner.py",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/dist/sbt-fizzer.py",
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}/dist/benchmarks",
            "justMyCode": true,
            "args": [
                "--output_dir", "${workspaceFolder}/dist/output",

                "--jsonc",
                // "--skip_building",
                // "--skip_fuzzing",
                // "--use_network",
                // "--silent_build",
                // "--m32",

                "--save_mapping",
                // "--br_too",

                "--max_executions", "10000",
                "--max_seconds", "15",
                "--max_trace_length", "10000",
                "--max_stack_size", "25",
                "--max_stdin_bytes", "65536",
                "--max_exec_milliseconds", "250",
                "--max_exec_megabytes", "1024",
                "--stdin_model", "stdin_replay_bytes_then_repeat_zero",
                "--stdout_model", "stdout_void",
                "--optimizer_max_seconds", "10",
                "--optimizer_max_trace_length", "1000000",
                "--optimizer_max_br_instr_trace_length", "10000000",
                "--optimizer_max_stack_size", "1000",
                "--optimizer_max_stdin_bytes", "134217728",
                "--optimizer_max_exec_milliseconds", "3000",
                "--optimizer_max_exec_megabytes", " 2048",
                "--clear_output_dir",
                "--progress_recording",
                // "--silent_mode",
                "--render",
                "--test_type",
                    "native",
                    // "testcomp",
                "--port", "45654",

                "--input_file",
                    "fast/_.c"
               ]
        },
        {
            "name": "run server",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "args": [
                "--path_to_target", "__sbt-fizzer_target",
                "--path_to_sala", "__sala.json",
                "--max_executions", "1000000",
                "--max_seconds", "300000",
                "--max_trace_length", "10000",
                "--max_stack_size", "25",
                "--max_stdin_bytes", "6400",
                "--max_exec_milliseconds", "25000000",
                "--max_exec_megabytes", "1024",
                "--stdin_model", "stdin_replay_bytes_then_repeat_zero",
                "--stdout_model", "stdout_void",
                "--optimizer_max_seconds", "10",
                "--optimizer_max_trace_length", "1000000",
                "--optimizer_max_br_instr_trace_length", "10000000",
                "--optimizer_max_stack_size", " 250",
                "--optimizer_max_stdin_bytes", "134217728",
                "--optimizer_max_exec_milliseconds", "3000",
                "--optimizer_max_exec_megabytes", " 2048",
                // "--clear_output_dir",
                "--progress_recording",
                // "--silent_mode",
                "--render",
                "--test_type",
                    "native",
                    // "testcomp",
                "--port", "45654",
                "--output_dir", "${workspaceFolder}/dist/output"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/dist/output",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "kill clients",
            //"postDebugTask": "kill clients"
        },
        {
            "name": "Benman @ dbg",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/benchmarks/benman.py",
            "console": "integratedTerminal",
            "args": [
                // "--verbose",
                "--clear",
                "--build",
                "--fuzz",
                "--input",
                    "all"
                    // "fast"
                    // "medium"
                    // "slow"
                    // "pending"

                    // "fast/_.c"
                ],
            "cwd": "${workspaceFolder}/dist/benchmarks",
            "justMyCode": true
        },
        {
            "name": "debug instrumenter",
            // On Windows use this:
                // "type": "cppvsdbg",
            // On Linux use this:
                "type": "cppdbg", "setupCommands": [{ "description": "Enable pretty-printing for gdb", "text": "-enable-pretty-printing", "ignoreFailures": true }],
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "args": [
                "--input", "${workspaceFolder}/dist/output/_.ll",
                "--output", "${workspaceFolder}/dist/output/__instrumented.ll",
                // "--br_too",
                "--save_mapping"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/dist"
        },
        {
            "name": "debug client",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/dist/benchmarks/pending/standard_vector_difference_ground_sbt-fizzer_target",
            "args": [
                "--input", "00",
                "--max_trace_length", "10000000",
                "--max_stack_size", "25",
                "--max_stdin_bytes", "6400000",
                "--max_exec_milliseconds", "250",
                "--max_exec_megabytes", "1024",
                "--stdin_model", "stdin_replay_bytes_then_repeat_85",
                "--stdout_model", "stdout_void",
                "--port", "45654"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/dist/benchmarks",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "kill clients",
            //"postDebugTask": "kill clients"
        },
        {
            "name": "salac.py",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/src/tools/salac/salac.py",
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}/dist/benchmarks/salatd",
            "justMyCode": true,
            "args": [
                "--bin", "${workspaceFolder}/dist/tools/salac/",
                "--jsonc",
                "--verbose",
                "--input",
                    "compile/_.c",

                "--output",
                    "${workspaceFolder}/dist/output"
            ]
        },
        {
            "name": "llvm2llvm",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/dist/output",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "args": [
                "--input",
                    "_.ll",
                ]
        },
        {
            "name": "llvm2sala",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/dist/output",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "args": [
                "--jsonc",
                "--input",
                    //"_.sim.ll",
                    //"__instrumented.sim.ll",
                    "_.ll"
                ]
        },
        {
            "name": "sala2sala",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/dist/output",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "args": [
                "--input",
                    "_.raw.json",

                "--output", "."
                ]
        },
        {
            "name": "test_interpretation",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/dist/output/interpret",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "args": [
                "--input", "safety_func_ptr_call.json", "--data", "../../benchmarks/salatd/interpret/safety_func_ptr_call.01.txt"
                ]
        },
        {
            "name": "test_builder_for_interpretation",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/dist/output",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "args": []
        },
        {
            "name": "test_input_flow",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/dist/output/inputflow",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "args": [
                "--input", "_.json", "--data", "../../benchmarks/salatd/inputflow/_.00.txt"
                ]
        },
        {
            "name": "test_builder_for_input_flow",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/dist/output",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "args": []
        },
        {
            "name": "salat.py",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/benchmarks/salatd/salat.py",
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}/dist/benchmarks/salatd",
            "justMyCode": true,
            "args": [
                "--salac_dir", "../../tools/salac",
                "--salat_dir", "../../tools/salat",
                "--output_dir", "../../output",

                //"--jsonc",
                // "--verbose",
                "--input",
                    //"compile"
                    //"interpret"
                    //"inputflow"

                    "compile/_.c"
                ]
        }
    ]
}